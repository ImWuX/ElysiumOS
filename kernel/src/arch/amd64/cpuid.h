#pragma once
#include <stdint.h>

#define CPUID_DEFINE_FEATURE(LEAF, REGISTER, BIT) ((cpuid_feature_t) { .leaf = (LEAF), .reg = (REGISTER), .bit = (BIT)})
#define CPUID_FEATURE_SSE3              CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 0)
#define CPUID_FEATURE_PCLMUL            CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 1)
#define CPUID_FEATURE_DTES64            CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 2)
#define CPUID_FEATURE_MONITOR           CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 3)
#define CPUID_FEATURE_DS_CPL            CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 4)
#define CPUID_FEATURE_VMX               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 5)
#define CPUID_FEATURE_SMX               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 6)
#define CPUID_FEATURE_EST               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 7)
#define CPUID_FEATURE_TM2               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 8)
#define CPUID_FEATURE_SSSE3             CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 9)
#define CPUID_FEATURE_CID               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 10)
#define CPUID_FEATURE_SDBG              CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 11)
#define CPUID_FEATURE_FMA               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 12)
#define CPUID_FEATURE_CX16              CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 13)
#define CPUID_FEATURE_XTPR              CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 14)
#define CPUID_FEATURE_PDCM              CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 15)
#define CPUID_FEATURE_PCID              CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 17)
#define CPUID_FEATURE_DCA               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 18)
#define CPUID_FEATURE_SSE4_1            CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 19)
#define CPUID_FEATURE_SSE4_2            CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 20)
#define CPUID_FEATURE_X2APIC            CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 21)
#define CPUID_FEATURE_MOVBE             CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 22)
#define CPUID_FEATURE_POPCNT            CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 23)
#define CPUID_FEATURE_TSC_DEADLINE      CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 24)
#define CPUID_FEATURE_AES               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 25)
#define CPUID_FEATURE_XSAVE             CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 26)
#define CPUID_FEATURE_OSXSAVE           CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 27)
#define CPUID_FEATURE_AVX               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 28)
#define CPUID_FEATURE_F16C              CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 29)
#define CPUID_FEATURE_RDRAND            CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 30)
#define CPUID_FEATURE_HYPERVISOR        CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_ECX, 31)
#define CPUID_FEATURE_FPU               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 0)
#define CPUID_FEATURE_VME               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 1)
#define CPUID_FEATURE_DE                CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 2)
#define CPUID_FEATURE_PSE               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 3)
#define CPUID_FEATURE_TSC               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 4)
#define CPUID_FEATURE_MSR               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 5)
#define CPUID_FEATURE_PAE               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 6)
#define CPUID_FEATURE_MCE               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 7)
#define CPUID_FEATURE_CX8               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 8)
#define CPUID_FEATURE_APIC              CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 9)
#define CPUID_FEATURE_SEP               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 11)
#define CPUID_FEATURE_MTRR              CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 12)
#define CPUID_FEATURE_PGE               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 13)
#define CPUID_FEATURE_MCA               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 14)
#define CPUID_FEATURE_CMOV              CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 15)
#define CPUID_FEATURE_PAT               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 16)
#define CPUID_FEATURE_PSE36             CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 17)
#define CPUID_FEATURE_PSN               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 18)
#define CPUID_FEATURE_CLFLUSH           CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 19)
#define CPUID_FEATURE_DS                CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 21)
#define CPUID_FEATURE_ACPI              CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 22)
#define CPUID_FEATURE_MMX               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 23)
#define CPUID_FEATURE_FXSR              CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 24)
#define CPUID_FEATURE_SSE               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 25)
#define CPUID_FEATURE_SSE2              CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 26)
#define CPUID_FEATURE_SS                CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 27)
#define CPUID_FEATURE_HTT               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 28)
#define CPUID_FEATURE_TM                CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 29)
#define CPUID_FEATURE_IA64              CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 30)
#define CPUID_FEATURE_PBE               CPUID_DEFINE_FEATURE(1, CPUID_REGISTER_EDX, 31)
#define CPUID_FEATURE_AVX512            CPUID_DEFINE_FEATURE(7, CPUID_REGISTER_EBX, 16)

typedef enum {
    CPUID_REGISTER_EAX,
    CPUID_REGISTER_EBX,
    CPUID_REGISTER_ECX,
    CPUID_REGISTER_EDX
} cpuid_register_t;

typedef struct {
    uint32_t leaf;
    cpuid_register_t reg;
    uint32_t bit;
} cpuid_feature_t;

/**
 * @brief Test for a feature exposed in CPUID
 *
 * @param feature A feature in CPUID
 * @retval true Supported
 * @retval false Unsupported
 */
bool cpuid_feature(cpuid_feature_t feature);

/**
 * @brief Retrieve the value from a specific register exposed by CPUID
 *
 * @param leaf CPUID leaf
 * @param reg Register
 * @param out Value returned by CPUID
 * @return true on failure
 */
bool cpuid_register(uint32_t leaf, cpuid_register_t reg, uint32_t *out);